---
import Layout from '../../layouts/Layout.astro';
import { practices } from '../../data/practices';
import { astrologers } from '../../data/astrologers';
import SearchAndFilter from '../../components/SearchAndFilter.astro';

// Get practice slug from URL
const { practice: practiceSlug } = Astro.params;

// Find the practice
const practice = practices.find(p => p.slug === practiceSlug);

// If practice not found, return 404
if (!practice) {
  return new Response('Practice not found', { status: 404 });
}

// Get all astrologers for this practice
const practiceAstrologers = astrologers.filter(
  a => a.practices.includes(practice.name)
);

// Find min and max fees
const minFees = Math.min(...practiceAstrologers.map(a => a.fees));
const maxFees = Math.max(...practiceAstrologers.map(a => a.fees));

// Group astrologers by area
const astrologersByArea = practiceAstrologers.reduce((acc, astrologer) => {
  if (!acc[astrologer.area]) {
    acc[astrologer.area] = [];
  }
  acc[astrologer.area].push(astrologer);
  return acc;
}, {} as Record<string, typeof astrologers>);

// Sort areas by number of astrologers
const sortedAreas = Object.entries(astrologersByArea)
  .sort(([, a], [, b]) => b.length - a.length);
---

<Layout title={`${practice.name} Experts in Agra | Delhi Astro Connect`}>
  <main class="min-h-screen bg-gray-50">
    <!-- Hero Section -->
    <section class="relative py-24 bg-gradient-to-br from-indigo-600 to-purple-700 text-white">
      <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-3xl mx-auto text-center">
          <h1 class="text-5xl font-display font-bold mb-6 animate-fade-in">
            {practice.name} Experts in Agra
          </h1>
          <p class="text-xl mb-8 opacity-90 animate-slide-up">
            Find experienced {practice.name.toLowerCase()} practitioners in your area
          </p>
        </div>
      </div>
      <div class="absolute bottom-0 left-0 right-0 h-16 bg-gradient-to-t from-gray-50 to-transparent"></div>
    </section>

    <!-- Search and Filter Section -->
    <section class="py-12 -mt-8">
      <div class="container mx-auto px-4">
        <SearchAndFilter minFees={minFees} maxFees={maxFees} />
      </div>
    </section>

    <!-- Astrologers by Area Section -->
    <section class="py-12">
      <div class="container mx-auto px-4">
        <div id="astrologersList">
          {sortedAreas.length > 0 ? (
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {sortedAreas.map(([area, areaAstrologers]) => (
                <div class="card">
                  <div class="p-6">
                    <div class="flex items-center justify-between mb-6">
                      <h2 class="text-2xl font-bold text-gray-900">{area}</h2>
                      <span class="px-3 py-1 bg-indigo-100 text-indigo-800 rounded-full text-sm font-medium">
                        {areaAstrologers.length} Expert{areaAstrologers.length !== 1 ? 's' : ''}
                      </span>
                    </div>
                    <div class="space-y-6">
                      {areaAstrologers.map(astrologer => (
                        <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
                          <div class="flex items-center justify-between mb-4">
                            <div>
                              <h3 class="text-lg font-semibold text-gray-900">{astrologer.name}</h3>
                              <p class="text-sm text-gray-600">{astrologer.experience} years experience</p>
                            </div>
                            <div class="flex items-center">
                              <span class="text-2xl text-yellow-400 mr-1">★</span>
                              <span class="font-medium">{astrologer.rating}</span>
                            </div>
                          </div>
                          <div class="space-y-3">
                            <div class="flex items-center text-sm text-gray-600">
                              <span class="font-medium">Languages:</span>
                              <span class="ml-2">{astrologer.languages.join(', ')}</span>
                            </div>
                            <div class="flex items-center text-sm text-gray-600">
                              <span class="font-medium">Fees:</span>
                              <span class="ml-2">₹{astrologer.fees}</span>
                            </div>
                            <div class="flex items-center space-x-4">
                              {astrologer.isOnline && (
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                  Online Available
                                </span>
                              )}
                              {astrologer.isOffline && (
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                  In-Person
                                </span>
                              )}
                            </div>
                          </div>
                          <div class="mt-6">
                            <a
                              href={`/astrologer/${astrologer.id}`}
                              class="btn w-full justify-center"
                            >
                              Book Consultation
                            </a>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div class="text-center py-12">
              <div class="w-24 h-24 mx-auto mb-6 text-gray-300">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-medium text-gray-900 mb-2">No Astrologers Found</h3>
              <p class="text-gray-600">Try adjusting your filters or search criteria</p>
            </div>
          )}
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  // Get all astrologers
  const astrologerCards = document.querySelectorAll('[data-astrologer]');
  
  // Listen for search events
  document.addEventListener('search', (e: CustomEvent) => {
    const searchTerm = e.detail.toLowerCase();
    
    astrologerCards.forEach(card => {
      const name = card.querySelector('[data-name]')?.textContent?.toLowerCase() || '';
      const practices = card.querySelector('[data-practices]')?.textContent?.toLowerCase() || '';
      
      if (name.includes(searchTerm) || practices.includes(searchTerm)) {
        card.classList.remove('hidden');
      } else {
        card.classList.add('hidden');
      }
    });
  });

  // Listen for filter changes
  document.addEventListener('filterChange', (e: CustomEvent) => {
    const filters = e.detail;
    
    astrologerCards.forEach(card => {
      const fees = parseInt(card.getAttribute('data-fees') || '0');
      const rating = parseFloat(card.getAttribute('data-rating') || '0');
      const languages = (card.getAttribute('data-languages') || '').split(',');
      const isOnline = card.getAttribute('data-online') === 'true';
      
      let visible = true;
      
      // Apply filters
      if (fees < filters.fees) visible = false;
      if (rating < filters.rating) visible = false;
      if (filters.languages.length > 0 && !filters.languages.some(lang => languages.includes(lang))) visible = false;
      if (filters.isOnlineOnly && !isOnline) visible = false;
      
      if (visible) {
        card.classList.remove('hidden');
      } else {
        card.classList.add('hidden');
      }
    });
  });
</script>
